syntax = "proto3";

package deopeia.identity;

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "types.proto";

option csharp_namespace = "Deopeia.Identity.Contracts";

// The user service definition.
service UserService {
  // Lists users with pagination.
  rpc ListUser (ListUserRequest) returns (ListUserResponse);

  // Gets a user by their ID.
  rpc GetUser (GetUserRequest) returns (GetUserResponse);

  // Creates a new user.
  rpc CreateUser (CreateUserRequest) returns (google.protobuf.Empty);

  // Updates an existing user.
  rpc UpdateUser (UpdateUserRequest) returns (google.protobuf.Empty);

  // Gets the authenticator details for a user.
  rpc GetAuthenticator (GetAuthenticatorRequest) returns (GetAuthenticatorResponse);

  // Enables the authenticator for a user.
  rpc EnableAuthenticator (EnableAuthenticatorRequest) returns (google.protobuf.Empty);

  // Gets the avatar URL for a user.
  rpc GetAvatar (GetAvatarRequest) returns (GetAvatarResponse);

  // Uploads an avatar for a user.
  rpc UploadAvatar (stream UploadAvatarRequest) returns (google.protobuf.Empty);
}

// The request message for listing users.
message ListUserRequest {
  int32 page_index = 1;
  int32 page_size = 2;
  google.protobuf.StringValue user_name = 3;
  google.protobuf.BoolValue is_enabled = 4;
  google.protobuf.StringValue role_code = 5;
}

// The response message containing the list of users.
message ListUserResponse {
  int32 page_index = 1;
  int32 page_size = 2;
  int32 page_count = 3;
  int32 total_count = 4;
  repeated User items = 5;

  message User {
    deopeia.common.Uuid id = 1;
    string user_name = 2;
    bool is_enabled = 3;
    repeated string role_codes = 4;
  }
}

// The request message for user-related operations, containing relevant user information.
message GetUserRequest {
  deopeia.common.Uuid id = 1;
}

// The response message containing the user information.
message GetUserResponse {
  deopeia.common.Uuid id = 1;
  string user_name = 2;
  bool is_enabled = 3;
  repeated string role_codes = 4;
}

// The request message for creating a new user.
message CreateUserRequest {
  string user_name = 1;
  string password = 2;
  bool is_enabled = 3;
  repeated string role_codes = 4;
}

// The request message for updating an existing user.
message UpdateUserRequest {
  deopeia.common.Uuid id = 1;
  string user_name = 2;
  google.protobuf.StringValue password = 3;
  bool is_enabled = 4;
  repeated string role_codes = 5;
}

// The request message for getting authenticator details.
message GetAuthenticatorRequest {
  deopeia.common.Uuid user_id = 1;
}

// The response message containing the authenticator details.
message GetAuthenticatorResponse {
  bool is_enabled = 1;
  google.protobuf.StringValue qr_code_image_url = 2;
  google.protobuf.StringValue manual_entry_key = 3;
}

// The request message for enabling the authenticator.
message EnableAuthenticatorRequest {
  deopeia.common.Uuid user_id = 1;
  string verification_code = 2;
}

// The request message for getting a user's avatar.
message GetAvatarRequest {
  deopeia.common.Uuid user_id = 1;
}

// The response message containing the avatar URL.
message GetAvatarResponse {
  google.protobuf.StringValue url = 1;
}

// The request message for uploading an avatar, sent as a stream of data chunks.
message UploadAvatarRequest {
  deopeia.common.Uuid user_id = 1;
  string file_name = 2;
  bytes content = 3;
}
